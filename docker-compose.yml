services:
  prometheus:
    image: prom/prometheus
    volumes:
      - "./configuration/prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      - sender
      - recipient
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    volumes:
      - "./docker/grafana-data:/var/lib/grafana"
    networks:
      - sender
      - recipient
    ports:
      - "3000:3000"

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    volumes:
      - "./configuration/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf"
      - "./configuration/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - sender
      - recipient

  postgres:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_DB=messagesDb
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD= admin
    ports:
      - '5432:5432'
    networks:
      - recipient
    volumes:
      - postgres:/var/lib/postgresql/data

  sender:
    build:
      context: ./sender
      dockerfile: ./Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
    ports:
      - "8090:8090"
    depends_on:
      - rabbitmq
    networks:
      - sender

  recipient:
    build:
      context: ./recipient
      dockerfile: ./Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
    ports:
      - "8091:8091"
    depends_on:
      - sender
    networks:
      - recipient

  collector:
    build:
      context: ./collector
      dockerfile: ./Dockerfile
    environment:
      - RECIPIENT_HOST=recipient
    ports:
      - "8092:8092"
    depends_on:
      - recipient
      - postgres
    networks:
      - recipient

networks:
  sender:
    ipam:
      driver: default
  recipient:
    ipam:
      driver: default

volumes:
  postgres:
    driver: local